server:
    port: 8085

spring:
  zipkin:
    baseUrl:  localhost:9411
  cloud:
    #stream.bindings is the start of the configuration needed for your service to publish to a Spring Cloud Stream message broke.
    stream:
      bindings:
        #outboundOrg is the name of your channel and maps to the custom output() channel you saw in listing
        outboundOrg:
          #orgChangeTopic is the name of the message queue (or topic) you’re going to write messages to.
          destination:  orgChangeTopic
          content-type: application/json
        #The stream.bindings.kafka property tells Spring you’re going to use Kafka as the message bus in the service (you could
        #have used RabbitMQ as an alternative).
      kafka:
        binder:
          #The zknodes and brokers property tells Spring Cloud Stream the network location of your Kafka and ZooKeeper.
          zkNodes: localhost
          brokers: localhost

eureka:
  instance:
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/

security:
  oauth2:
    resource:
      userInfoUri: http://localhost:8901/auth/user
#Setting the logging levels for the service

logging:
  level:
    com.netflix: WARN
    org.springframework.web: WARN
    com.thoughtmechanix: DEBUG
        